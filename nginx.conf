map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

types {
    application/javascript mjs;
}

server {
    listen 80;
    server_name localhost;

    # Frontend
    location / {
        root /app/frontend/dist;
        try_files $uri $uri/ /index.html;
        index index.html;

        # Handle JavaScript modules
        location ~* \.(js|mjs)$ {
            add_header Content-Type application/javascript;
            try_files $uri =404;
        }
    }

    # Backend API
    location /api {
        rewrite ^/api/?(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Dashboard
    location /dashboard/ {
        alias /app/dashboard/dist/;
        try_files $uri $uri/ /dashboard/index.html;
        index index.html;

        # Handle JavaScript modules
        location ~ ^/dashboard/.*\.(js|mjs)$ {
            add_header Content-Type application/javascript;
            try_files $uri =404;
        }
    }

    # Dashboard API
    location /dashboard-api {
        rewrite ^/dashboard-api/?(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket support for HMR
    location /ws {
        proxy_pass http://127.0.0.1:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
} 